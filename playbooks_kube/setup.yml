- hosts: "masters, workers"
  become: true
  become_method: sudo
  become_user: root
  gather_facts: true
  connection: ssh

  vars_files:
    - vars/default.yml

  tasks:

    - name: "Update hostnames"
      hostname:
        name: "{{ ansible_host }}"
      become: true

    - name: Add IP address of all hosts to all hosts
      lineinfile:
        dest: /etc/hosts
        #regexp: '.*{{ item }}$'
        line: "{{ hostvars[item]['ansible_facts']['enp0s3']['ipv4']['address'] }} {{ hostvars[item].ansible_host }} {{item}}"
        insertbefore: BOF # '127.0.0.1\tlocalhost'
        state: present
      when: hostvars[item].ansible_host is defined
      with_items: "{{ groups.all }}"

    - name: "Disable Ubuntu auto update package list"
      lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: 'APT::Periodic::Update-Package-Lists'
        line: 'APT::Periodic::Update-Package-Lists "0";'

    - name: Disable Ubuntu auto upgrade
      lineinfile:
        path: /etc/apt/apt.conf.d/20auto-upgrades
        regexp: 'APT::Periodic::Unattended-Upgrade'
        line: 'APT::Periodic::Unattended-Upgrade "0";'

    - name: Workaround issue Virtualbox shared folder permissions - permission denied
      user:
        name: "{{ k8s_user }}"
        append: yes
        groups: vboxsf
      become: true
      with_items: "{{ k8s_user }}"

    - name: Make the Swap inactive
      command: swapoff -a

    - name: Remove Swap entry from /etc/fstab.
      lineinfile:
        dest: /etc/fstab
        regexp: swap
        state: absent

    - name: Add kernel overlay and br_netfilter kernel modules
      shell: |
        tee /etc/modules-load.d/containerd.conf <<EOF
        overlay
        br_netfilter
        EOF
      become: true

    - name: Load kernel modules
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: kernel parameters modules for kubernetes
      sysctl:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        sysctl_file: /etc/sysctl.d/kubernetes.conf
        state: present
        reload: yes
      loop:
        - { name: 'net.bridge.bridge-nf-call-ip6tables', value: '1' }
        - { name: 'net.bridge.bridge-nf-call-iptables', value: '1' }
        - { name: 'net.ipv4.ip_forward', value: '1' }

    - name: Installing Prerequisites for Kubernetes
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - vim
          - software-properties-common
        state: present

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
        filename: docker
        mode: 0600

    - name: Install Docker Engine.
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Enable service docker, and enable persistently
      service:
        name: docker
        enabled: yes

    - name: Add Docker users
      user:
        name: "{{ k8s_user }}"
        append: yes
        groups: "{{ docker_group }}"
      become: true
      with_items: "{{ k8s_user }}"

    - name: Configure Docker daemon.json
      shell: |
        cat > /etc/docker/daemon.json <<EOF
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-driver": "json-file",
          "log-opts": {
            "max-size": "100m"
          },
          "storage-driver": "overlay"
        }
        EOF
        mkdir -p /etc/systemd/system/docker.service.d
      become: true

    - name: Restart Docker engine
      service:
        name: docker
        state: restarted
        daemon_reload: yes
      become: true
      become_user: root
      become_method: sudo

    - name: Add Google official GPG key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes Repository
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes
        mode: 0600

    - name: Installing Kubernetes Cluster Packages.
      apt:
        name: "{{ item }}"
        state: present
        force: yes
      loop:
        - kubeadm=1.23.9-00
        - kubelet=1.23.9-00
        - kubectl=1.23.9-00

    - name: Enable service kubelet, and enable persistently
      service:
        name: kubelet
        enabled: yes

    - name: Workaround to start kubeadm - error container runtime is not running
      shell: |
        rm /etc/containerd/config.toml
        systemctl restart containerd
      become: true

    - name: Workaround to start kubelet
      lineinfile:
        path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
        line: 'Environment="KUBELET_EXTRA_ARGS=--fail-swap-on=false"'
        insertafter: Environment=*

    - name: Reboot all the kubernetes nodes.
      reboot:
        post_reboot_delay: 10
        reboot_timeout: 60
        connect_timeout: 100
        test_command: uptime
